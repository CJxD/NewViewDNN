name: "Up-Conv 2-image 1-3Dnet CNN"

# Inputs
layer {
  name: "data-img1"
  type: "Input"
  top: "data-img1"
  input_param {
    shape: { dim: 1 dim: 3 dim: 256 dim: 256 }
  }
}
layer {
  name: "data-img2"
  type: "Input"
  top: "data-img2"
  input_param {
    shape: { dim: 1 dim: 3 dim: 256 dim: 256 }
  }
}
layer {
  name: "data-net1"
  type: "Input"
  top: "data-net1"
  input_param {
    #shape: { dim: 1 dim: 256 dim: 256 dim: 256 }
	shape: { dim: 1 dim: 2 }
  }
}
layer {
  name: "data-params"
  type: "Input"
  top: "data-params"
  input_param {
    shape: { dim: 1 dim: 2 }
  }
}
layer {
  name: "data-target"
  type: "Input"
  top: "target"
  input_param {
    shape: { dim: 1 dim: 3 dim: 128 dim: 128 }
  }
}

# FC1
layer {
  name: "fc1-img1"
  type: "InnerProduct"
  bottom: "data-img1"
  top: "fc1img1"
  inner_product_param {
    num_output: 512
  }
}
layer {
  name: "fc1-img2"
  type: "InnerProduct"
  bottom: "data-img2"
  top: "fc1img2"
  inner_product_param {
    num_output: 512
  }
}
layer {
  name: "fc1-net1"
  type: "InnerProduct"
  bottom: "data-net1"
  top: "fc1net1"
  inner_product_param {
    num_output: 512
  }
}
layer {
  name: "fc1-params"
  type: "InnerProduct"
  bottom: "data-params"
  top: "fc1params"
  inner_product_param {
    num_output: 512
  }
}
layer {
  name: "fc1-concat"
  bottom: "fc1img1"
  bottom: "fc1img2"
  bottom: "fc1net1"
  bottom: "fc1params"
  top: "fc1"
  type: "Concat"
  concat_param {
    axis: 1
  }
}

# FC2
layer {
  name: "fc2"
  type: "InnerProduct"
  bottom: "fc1"
  top: "fc2"
  inner_product_param {
    num_output: 2048
  }
}

# FC3
layer {
  name: "fc3"
  type: "InnerProduct"
  bottom: "fc2"
  top: "fc3"
  inner_product_param {
    num_output: 1024
  }
}

# FC4
layer {
  name: "fc4"
  type: "InnerProduct"
  bottom: "fc3"
  top: "fc4"
  inner_product_param {
    num_output: 1024
  }
}

# upconv1
layer {
  name: "upconv1"
  type: "Deconvolution"
  bottom: "fc4"
  top: "upconv1"
  convolution_param {
    num_output: 192 # 3x8x8
    kernel_size: 5
    stride: 2
  }
}

# upconv2
layer {
  name: "upconv2"
  type: "Deconvolution"
  bottom: "upconv1"
  top: "upconv2"
  convolution_param {
    num_output: 768 # 3x16x16
    kernel_size: 5
    stride: 2
  }
}

# upconv3
layer {
  name: "upconv3"
  type: "Deconvolution"
  bottom: "upconv2"
  top: "upconv3"
  convolution_param {
    num_output: 3072 # 3x32x32
    kernel_size: 5
    stride: 2
  }
}

# upconv4
layer {
  name: "upconv4"
  type: "Deconvolution"
  bottom: "upconv3"
  top: "upconv4"
  convolution_param {
    num_output: 12288 # 3x64x64
    kernel_size: 5
    stride: 2
  }
}

# upconv5
layer {
  name: "upconv5"
  type: "Deconvolution"
  bottom: "upconv4"
  top: "upconv5"
  convolution_param {
    num_output: 49152 # 3x128x128
    kernel_size: 5
    stride: 2
  }
}

# loss
layer {
  name: "loss"
  type: "EuclideanLoss"
  bottom: "upconv5"
  bottom: "target"
  top: "loss"
}